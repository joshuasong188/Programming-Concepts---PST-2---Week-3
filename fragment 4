# --- Utility Functions ---
def _input_int(prompt: str) -> Optional[int]:
    try:
        return int(input(prompt).strip())
    except ValueError:
        print("Please enter a valid integer.")
        return None

def _input_nonempty(prompt: str) -> Optional[str]:
    s = input(prompt).strip()
    return s if s else None

# --- Main Application Loop ---
def main() -> None:
    load_data()

    while True:
        print("\n===== MSMS v2 (Persistent) =====")
        print("1. Check-in Student")
        print("2. Print Student Card")
        print("3. Update Teacher Info")
        print("4. Remove Student")
        print("q. Quit and Save")

        choice = input("Enter your choice: ").strip()
        made_change = False

        if choice == '1':
            sid = _input_int("Student ID to check in: ")
            if sid is None:
                continue
            course = _input_nonempty("Course ID (e.g., Piano101): ")
            if not course:
                print("Course ID cannot be empty.")
                continue
            check_in(sid, course)
            made_change = True

        elif choice == '2':
            sid = _input_int("Student ID to print card: ")
            if sid is None:
                continue
            print_student_card(sid)

        elif choice == '3':
            tid = _input_int("Teacher ID to update: ")
            if tid is None:
                continue
            new_name = input("New name (leave blank to skip): ").strip()
            new_spec = input("New speciality (leave blank to skip): ").strip()
            fields = {}
            if new_name:
                fields["name"] = new_name
            if new_spec:
                fields["speciality"] = new_spec
            if fields:
                updated = update_teacher(tid, **fields)
                made_change = made_change or updated
            else:
                print("No fields provided; nothing updated.")

        elif choice == '4':
            sid = _input_int("Student ID to remove: ")
            if sid is None:
                continue
            removed = remove_student(sid)
            made_change = made_change or removed

        elif choice.lower() == 'q':
            print("Saving final changes and exiting.")
            break

        else:
            print("Invalid choice.")

        if made_change:
            save_data()

    save_data()

# --- Program Start ---
if __name__ == "__main__":
    main()
